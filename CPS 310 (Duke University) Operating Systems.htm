
<!-- saved from url=(0049)https://users.cs.duke.edu/~chase/cps310/work.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>CPS 310 (Duke University) Operating Systems</title>
<meta http-equiv="Content-Type" content="text/html; charset=">
<link rel="stylesheet" href="./CPS 310 (Duke University) Operating Systems_files/basic.css" type="text/css">
</head>

<body>

<table class="header">
  <tbody><tr> 
    <td width="255"><a href="http://www.cs.duke.edu/"><img src="./CPS 310 (Duke University) Operating Systems_files/cs-banner.gif" height="40" border="0"></a>
    </td>
    <td class="header-cell"> 
     <b>CPS 310 Operating Systems</b>
  </td>
    <td><a href="http://www.duke.edu/"><img src="./CPS 310 (Duke University) Operating Systems_files/duke-shield.gif" height="40" border="0"></a></td>
  </tr>
  <tr> 
    <td colspan="3"> 
      <table width="100%">
        <tbody><tr height="20"> 
          <td class="button" width="20%"> 
            <a href="https://users.cs.duke.edu/~chase/cps310/index.html">home</a>
          </td>
          <td class="button" width="20%"> 
            <a href="https://users.cs.duke.edu/~chase/cps310/calendar.html">calendar</a>
          </td>
          <td class="button" width="20%"> 
            <a href="https://users.cs.duke.edu/~chase/cps310/topics.html">topics</a>
          </td>
          <td class="button" width="20%"> 
            <a href="https://users.cs.duke.edu/~chase/cps310/work.html">work</a>
          </td>
          <td class="button" width="20%"> 
            <a href="https://users.cs.duke.edu/~chase/cps310/resources.html">resources</a>
          </td>
        </tr>
      </tbody></table>
    </td>
  </tr>
 <tr height="5">
  </tr>
</tbody></table>

<ul>
  <li><a href="https://users.cs.duke.edu/~chase/cps310/p0.html">Lab 0: Heap manager</a>
  </li><li><a href="https://users.cs.duke.edu/~chase/cps310/p1.html">Lab 1: Threads</a>
  </li><li><a href="https://lpc.cs.duke.edu/compsci310/projects/p2.php">Lab
  2: Stack smash</a> [<a href="https://users.cs.duke.edu/~chase/cps310/p2.html">local copy</a>]
  </li><li><a href="https://users.cs.duke.edu/~chase/cps310/p3.html">Lab 3: Consensus</a>
  
  
</li></ul>


<h1>Policies for the Labs</h1>

<p>
<b>We expect you to know this information.</b>
</p>

<h2>Handing in your work</h2>

<a href="https://lpc.cs.duke.edu/compsci310/root-group.php">Register</a> your group.  The group registration system will tell you how
to access your group's code repository on <i>gitlab.oit.duke.edu</i>.

<p><b>Submit</b> your code through the <a href="https://lpc.cs.duke.edu/compsci310/root-submit.php">autograder</a>.
The autograder pulls the latest code from your git repository (be sure
to push your changes to your repository!),
compiles/builds it, runs some tests on it, and reports a result to you.  The
result is a thumbs-up/thumbs-down (pass/fail) for each test.  The
specific tests and specific observed behavior under each test are secret.

<b>Autograder limits.</b>  Each group may submit to the autograder at most once per
day (calendar date / resets at midnight).  In addition, for each project you have three bonus submissions
that you may use at any time.  Occasionally we grant additional bonus
submissions.  In particular, the autograder and tests are undergoing continuous
enhancement.  We will grant additional bonus submission if there is
any problem with the autograder: please bear with us. 

</p><h2>Using other people's code</h2>
<p>
We all know that there are various fragments of code available on the web
that are relevant to the assignments.  You are not prohibited from looking at material on the
web.  We believe that we have provided you with enough to start with that it will not benefit you to import source code from anywhere
else.  The point of the lab is to learn, and we want to make it easy
for you to learn!

</p><p>When you hand in the lab, we expect that your code
is your own.  If you incorporate source code from some external
source, you must add a comment indicating the imported code and the
source of that code.  You must note all sources of imported code in
your submitted README file.  You should be able to explain any part
of your code in detail, and why you chose to do it that way and not some
other way.  If you encounter code from some external source that
diminishes your opportunity to learn by doing the lab, please
inform us (we may not be aware of it).
</p><p>
<b>Academic dishonesty.</b>  Be sure that you are familiar with the <a href="https://users.cs.duke.edu/~chase/cps310/policies.html">policy on
  collaboration and other policies</a>.  In particular, sharing of
code among groups is not allowable.  Do not
obtain code from previous semesters.  Take care to 
acknowledge any sources of code or assistance in your README.  

</p><h1>Resources</h1>

<b>About C.</b>  The first labs ask you to program in the C programming language.
We will discuss some aspects of C in lectures and recitations, and we
will provide relevant examples, but we do not teach C.  If C is
unfamiliar to you, you will need to read up from some other sources,
or spend more time with the sample programs.  You should
take the time to look through some of the supporting materials on the
<a href="https://users.cs.duke.edu/~chase/cps310/resources.html">resources</a> page.  We find that the
students who struggle most have not taken the time to read up, and as
a result they have found themselves spending more time debugging.
<p>
<b>About Unix.</b>  To do the labs you will need a Unix development
environment.  If you are a CompSci or Engineering major then you have
access to Unix systems in those departments (e.g.,
<i>login.cs.duke.edu</i>).  We can create term accounts to get access
to Unix systems in the CompSci department if you need it.  Duke also
runs a virtual machine service that can give you a private Unix system
for your use.  You are welcome to use your own machine if it provides
a suitable Unix development environment.  Apple provides a good
environment for Macs, and there is software that purports to
provide a usable Unix environment over Windows (but be warned that may be more
trouble than it's worth).
</p><p>
<b>If you are using Mac OSX.</b>  Go download and install Xcode from
<i>developer.apple.com</i>.  
</p><p>
Note also that the gdb debugger has been <a href="http://stackoverflow.com/questions/19554439/gdb-missing-in-os-x-mavericks">replaced
with lldb</a> in OSX.
</p><p>
<b>If you are using Windows.</b>  You need a Unix development
environment, and Windows does not provide one (see above).  But you
can create an Ubuntu virtual machine using VirtualBox.
</p><p>
<b>Once you have a command-line shell on a suitable system</b>.  You can compile C code
with the <i>gcc</i> compiler, and/or build programs with the
<i>make</i> utility.  You can use the <i>man</i> command to learn about any C builtin library
API and/or system call API or command.  E.g., try <i>man malloc</i> or
<i>man strcpy</i>.

</p></body></html>